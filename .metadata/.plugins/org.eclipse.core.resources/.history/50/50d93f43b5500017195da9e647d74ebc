
public class Palindrome {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ListNode head = new LinkedListt(new int[]{5,6,5,7}).getHead();
		LinkedListt obj = new LinkedListt();
		System.out.println(isPal(head));

	}
	public static BoolNode isPal1(ListNode n, int l){
		
	}
	public static boolean isPal(ListNode n){
		if(n== null || n.next==null) return true;
		ListNode slow = n;
		ListNode fast = n.next;
		while(fast!=null && fast.next!=null){
			slow = slow.next;
			fast = fast.next.next;		
		}
		slow = slow.next;
		slow = reverse(slow);
		fast = n;
		while(slow!=null){
			if(slow.val != fast.val) return false;
			System.out.println("Cont");
			slow = slow.next;
			fast = fast.next;		
		}
		return true;	
	}
	public static ListNode reverse(ListNode n){
		ListNode head = n;
		ListNode rev = null;
		ListNode cur = null;
		while(head!=null){
			cur = head.next;
			head.next = rev;
			rev = head;
			head = cur;
		}
		return rev;	
	}
}
class BoolNode{
	ListNode n;
	boolean isPal;
	public BoolNode(ListNode ode, boolean b){
		n = ode;
		isPal = b;
	}
}
